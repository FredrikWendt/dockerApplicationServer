<?xml version="1.0" encoding="utf-8"?>
<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="72">
  <server artifactsdir="artifacts" agentAutoRegisterKey="388b633a88de126531afa41eff9aa69e" commandRepositoryLocation="default" serverId="3c98e67f-7050-46ef-b051-fd8e63aef897" />
  <pipelines group="Doodleshop">
    <pipeline name="Build" labeltemplate="1.0.${COUNT}" isLocked="false">
      <materials>
        <git url="https://github.com/FredrikWendt/doodleshop" />
      </materials>
      <stage name="Maven_package_Docker_build" cleanWorkingDir="true">
        <jobs>
          <job name="mvn_package_docker_build">
            <tasks>
              <exec command="/usr/bin/env">
                <runif status="passed" />
              </exec>
              <exec command="mvn">
                <arg>versions:set</arg>
                <arg>-DnewVersion=${env.GO_PIPELINE_LABEL}</arg>
                <arg>-B</arg>
                <runif status="passed" />
              </exec>
              <exec command="mvn">
                <arg>clean</arg>
                <arg>package</arg>
                <arg>-B</arg>
                <runif status="passed" />
              </exec>
              <exec command="ls">
                <arg>-lR</arg>
                <arg>.</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>build-docker-container.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="*.sh" dest="scripts" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="Deploy_and_test_Small" labeltemplate="1.0.${COUNT}" isLocked="false">
      <materials>
        <pipeline pipelineName="Build" stageName="Maven_package_Docker_build" materialName="Doodleshop_Docker_Image" />
      </materials>
      <stage name="DeployToAutoSmall" cleanWorkingDir="true">
        <environmentvariables>
          <variable name="DOODLE_ENV">
            <value>autosmall</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="DeployAndSmokeTests">
            <tasks>
              <fetchartifact pipeline="Build" stage="Maven_package_Docker_build" job="mvn_package_docker_build" srcdir="deployandsmoke.sh">
                <runif status="passed" />
              </fetchartifact>
              <exec command="bash">
                <arg>deployandsmoke.sh</arg>
                <arg>2</arg>
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="TestAutoSmall">
        <environmentvariables>
          <variable name="DOODLE_ENV">
            <value>autosmall</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="RunTest">
            <tasks>
              <exec command="bash">
                <arg>runtest.sh</arg>
                <arg>2</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="Deploy_and_test_Large" labeltemplate="1.0.${COUNT}" isLocked="false">
      <materials>
        <git url="https://github.com/FredrikWendt/doodleshop" />
        <pipeline pipelineName="Build" stageName="Maven_package_Docker_build" materialName="Doodleshop_Docker_Image" />
      </materials>
      <stage name="DeployToAutoLarge">
        <environmentvariables>
          <variable name="DOODLE_ENV">
            <value>autolarge</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="DeployAndSmokeTests">
            <tasks>
              <exec command="bash">
                <arg>deployandsmoke.sh</arg>
                <arg>3</arg>
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="TestAutoLarge">
        <environmentvariables>
          <variable name="DOODLE_ENV">
            <value>autolarge</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="RunTest">
            <tasks>
              <exec command="mvn">
                <arg>clean</arg>
                <arg>verify</arg>
                <arg>-B</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="Deploy_to_Manual" labeltemplate="1.0.${COUNT}" isLocked="false">
      <materials>
        <git url="https://github.com/FredrikWendt/doodleshop" />
        <pipeline pipelineName="Build" stageName="Maven_package_Docker_build" materialName="Doodleshop_Docker_Image" />
      </materials>
      <stage name="DeployToMan">
        <approval type="manual" />
        <environmentvariables>
          <variable name="DOODLE_ENV">
            <value>man</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="DeployAndSmokeTests">
            <tasks>
              <exec command="bash">
                <arg>deployandsmoke.sh</arg>
                <arg>4</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="TestMan">
        <environmentvariables>
          <variable name="DOODLE_ENV">
            <value>man</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="NotifyManTest">
            <tasks>
              <exec command="bash">
                <arg>-c</arg>
                <arg>echo</arg>
                <arg>Send mail</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="Deploy_to_PROD" labeltemplate="1.0.${COUNT}" isLocked="false">
      <materials>
        <pipeline pipelineName="Deploy_to_Manual" stageName="TestMan" materialName="Doodleshop_Docker_Image" />
      </materials>
      <stage name="DeployToProd">
        <approval type="manual" />
        <environmentvariables>
          <variable name="DOODLE_ENV">
            <value>man</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="DeployAndSmokeTests">
            <tasks>
              <exec command="bash">
                <arg>deployandsmoke.sh</arg>
                <arg>5</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
</cruise>
